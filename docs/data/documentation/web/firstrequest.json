{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Describe-a-Request","level":2,"type":"heading","text":"Describe a Request"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s say you need to fetch "},{"type":"codeVoice","code":"SomeObject"},{"type":"text","text":" by its ID."}]},{"type":"codeListing","syntax":"swift","code":["import Web","","struct SomeObjectRequest: Request { ","   let id: String","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each request must declare response converters for success and failure cases that will be used by a"},{"type":"text","text":" "},{"type":"text","text":"web client."}]},{"type":"codeListing","syntax":"swift","code":["struct SomeObjectRequest: Request { ","   ...","","   var successObjectResponseConverter: any ResponseConverter<SomeObject> {","      JSONDecoderResponseConverter()","   }","","   var errorObjectResponseConverter: any ResponseConverter<APIError> {","      JSONDecoderResponseConverter()","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, you need to describe how "},{"type":"codeVoice","code":"SomeObjectRequest"},{"type":"text","text":" is converted to "},{"type":"codeVoice","code":"URLRequest"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["struct SomeObjectRequest: Request { ","   ...","","   func toURLRequest(with baseURL: URL?) throws {","      let url = try URL(path: \"some-objects\/\\(id)\", baseURL: baseURL)","      return URLRequest(url: url, method: .get)","   }","}"]},{"anchor":"Simplify-Request-Declaration","level":2,"type":"heading","text":"Simplify Request Declaration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you use "},{"type":"codeVoice","code":"JSONDecoder"},{"type":"text","text":" or any other converter for each request, you can simplify request"},{"type":"text","text":" "},{"type":"text","text":"description by declaring request protocol in your app."}]},{"type":"codeListing","syntax":"swift","code":["protocol MyAppRequest: Request where SuccessObject: Decodable {","   var decoder: JSONDecoder { get }","}","","extension MyAppRequest {","   var decoder: JSONDecoder {","      JSONDecoder()","   }","","   var successObjectResponseConverter: any ResponseConverter<SuccessObject> {","      JSONDecoderResponseConverter(decoder: JSONDecoder())","   }","   ","   var errorObjectResponseConverter: any ResponseConverter<APIError> {","      JSONDecoderResponseConverter()","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then "},{"type":"codeVoice","code":"SomeObjectRequest"},{"type":"text","text":" can be described as following:"}]},{"type":"codeListing","syntax":"swift","code":["struct SomeObjectRequest: MyAppRequest {","   typealias SuccessObject = SomeObject","","   let id: String","   ","   func toURLRequest(with baseURL: URL?) throws {","      let url = try URL(path: \"some-objects\/\\(id)\", baseURL: baseURL)","      return URLRequest(url: url, method: .get)","   }","}"]},{"anchor":"Create-a-Web-Client","level":2,"type":"heading","text":"Create a Web Client"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To send a request you need to create an instance of web client."}]},{"type":"codeListing","syntax":"swift","code":["let configuration: URLSessionWebClientConfiguration = .default","configuration.baseURL = URL(string: \"https:\/\/api.myservice.com\/v1\/\")","let webClient: WebClient = URLSessionWebClient(configuration: configuration)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Important thing here is that if you use "},{"type":"codeVoice","code":"URL(path:baseURL) throws"},{"type":"text","text":" provided by this library,"},{"type":"text","text":" "},{"type":"text","text":"you probably need to end baseURL with "},{"type":"codeVoice","code":"\/"},{"type":"text","text":" and path shouldn’t begin with "},{"type":"codeVoice","code":"\/"},{"type":"text","text":" as this initializer uses"},{"type":"text","text":" "},{"type":"text","text":"relative URL mechanism"}]},{"anchor":"Send-a-Request","level":2,"type":"heading","text":"Send a Request"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, you can create and execute request on the web client."}]},{"type":"codeListing","syntax":"swift","code":["do {","   let request = SomeObjectRequest(id: requiredID)","   let someObject = try await webClient.execute(request)","   use(someObject)","} catch let error as APIError {","   react(to: error)","} catch error {","   doSomethingElse(with: error)","}"]},{"anchor":"Cancel-a-Request","level":2,"type":"heading","text":"Cancel a Request"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to cancel requests, you can use "},{"type":"codeVoice","code":"Task"},{"type":"text","text":" API provided by Swift concurrency."}]},{"type":"codeListing","syntax":"swift","code":["let task = Task {","   let request = SomeObjectRequest(id: requiredID)","   return try await webClient.execute(request)","}","self.task = task","","do {","   let someObject = try await task.value","   use(someObject)","} catch {","   ...","}","","\/\/ Later somewhere in code","","self.task?.cancel()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"That’s it!"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/web\/firstrequest"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Web\/documentation\/Web\/FirstRequest","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Read how to make requests and receive responses using the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Web"}]},{"type":"text","text":" library."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Make Your First Request","role":"article","modules":[{"name":"Web"}]},"hierarchy":{"paths":[["doc:\/\/Web\/documentation\/Web"]]},"seeAlsoSections":[{"title":"Getting Started","identifiers":["doc:\/\/Web\/documentation\/Web\/Installation","doc:\/\/Web\/documentation\/Web\/Request","doc:\/\/Web\/documentation\/Web\/WebClient","doc:\/\/Web\/documentation\/Web\/URLSessionWebClient","doc:\/\/Web\/documentation\/Web\/URLSessionWebClientConfiguration"],"generated":true}],"references":{"doc://Web/documentation/Web/URLSessionWebClient":{"role":"symbol","title":"URLSessionWebClient","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"URLSessionWebClient"}],"abstract":[{"type":"text","text":"An implementation of a "},{"type":"codeVoice","code":"WebClient"},{"type":"text","text":" based on "},{"type":"codeVoice","code":"URLSession"},{"type":"text","text":"."}],"identifier":"doc:\/\/Web\/documentation\/Web\/URLSessionWebClient","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"URLSessionWebClient"}],"url":"\/documentation\/web\/urlsessionwebclient"},"doc://Web/documentation/Web/Installation":{"role":"article","title":"Installation","abstract":[{"type":"text","text":"Read how to install "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Web"}]},{"type":"text","text":" library and link it to your projects."}],"identifier":"doc:\/\/Web\/documentation\/Web\/Installation","kind":"article","type":"topic","url":"\/documentation\/web\/installation"},"doc://Web/documentation/Web/WebClient":{"role":"symbol","title":"WebClient","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebClient"}],"abstract":[{"type":"text","text":"A protocol that describes a web client that sends requests and processes responses to requests"},{"type":"text","text":" "},{"type":"text","text":"by validating them and returns either resulting objects or API errors."}],"identifier":"doc:\/\/Web\/documentation\/Web\/WebClient","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WebClient"}],"url":"\/documentation\/web\/webclient"},"doc://Web/documentation/Web":{"role":"collection","title":"Web","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Web"}]},{"type":"text","text":" is a network library that provides you with a full-featured web client built on top of new"},{"type":"text","text":" "},{"type":"text","text":"concurrency model introduced in Swift 5.5."}],"identifier":"doc:\/\/Web\/documentation\/Web","kind":"symbol","type":"topic","url":"\/documentation\/web"},"doc://Web/documentation/Web/URLSessionWebClientConfiguration":{"role":"symbol","title":"URLSessionWebClientConfiguration","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"URLSessionWebClientConfiguration"}],"abstract":[{"type":"text","text":"A configuration object used to create "},{"type":"codeVoice","code":"URLSessionWebClient"},{"type":"text","text":"."}],"identifier":"doc:\/\/Web\/documentation\/Web\/URLSessionWebClientConfiguration","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"URLSessionWebClientConfiguration"}],"url":"\/documentation\/web\/urlsessionwebclientconfiguration"},"doc://Web/documentation/Web/Request":{"role":"symbol","title":"Request","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Request"}],"abstract":[{"type":"text","text":"A protocol that describes every request sent by a "},{"type":"codeVoice","code":"WebClient"},{"type":"text","text":"."}],"identifier":"doc:\/\/Web\/documentation\/Web\/Request","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Request"}],"url":"\/documentation\/web\/request"}}}