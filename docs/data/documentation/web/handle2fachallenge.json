{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Two factor authentication is an authentication method that allows to improve security of your"},{"type":"text","text":" "},{"type":"text","text":"app. In our apps we usually use one-time passwords sent to a user via text messages or e-mails. The"},{"type":"text","text":" "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Web"}]},{"type":"text","text":" library provides you with functionality to handle these challenges in one place."}]},{"anchor":"Note:","level":5,"type":"heading","text":"Note:"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This functionality is intended to handle challenges when you need to re-send request to get one-time"},{"type":"text","text":" "},{"type":"text","text":"password one more time and send the same request but with additional header field to authenticate"},{"type":"text","text":" "},{"type":"text","text":"challenge."}]},{"anchor":"Implement-Handler","level":3,"type":"heading","text":"Implement Handler"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To handle 2FA challenges, "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Web"}]},{"type":"text","text":" library provides you with a "},{"type":"codeVoice","code":"TwoFactorAuthenticationHandler"},{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"protocol you need to implement."}]},{"type":"codeListing","syntax":"swift","code":["final class My2FAHandler: TwoFactorAuthenticationHandler { }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This protocol has two required methods you need to implement. The first one responds for checking a"},{"type":"text","text":" "},{"type":"text","text":"response if it requires 2FA. Let’s say your server returns status code if 600 2FA is required."}]},{"type":"codeListing","syntax":"swift","code":["final class My2FAHandler: TwoFactorAuthenticationHandler { ","   func responseRequiresTwoFactorAuthentication(_ response: Response) -> Bool {","      response.statusCode == 600","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The second method is the point where you can present UI to a user."}]},{"type":"codeListing","syntax":"swift","code":["final class My2FAHandler: TwoFactorAuthenticationHandler {","   ...","","   func handle(_ challenge: TwoFactorAuthenticationChallenge) { }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A server may return you some data about 2FA challenge so you need to get this data."}]},{"type":"codeListing","syntax":"swift","code":["@MainActor","func handle(_ challenge: TwoFactorAuthenticationChallenge) {","   do {","      let props = try challenge.convertedResponse(using: JSONDecoderResponseConverter<TwoFAProps>()) ","   } catch {","      challenge.complete(with: error)","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now you can present a view controller to a user."}]},{"type":"codeListing","syntax":"swift","code":["@MainActor","func handle(_ challenge: TwoFactorAuthenticationChallenge) {","   ...","   let controller = TwoFAViewController(","      props: props, ","      onCancel: { [weak self] in","         self?.cancel(challenge)","      }, ","      onRefresh: {","         try await challenge.refresh()","      },","      onAuthenticate: { [weak self] code in","         let header = Header(name: \"X-2FA-HEADER\", value: code)","         do {","            try await challenge.authenticate(with: header)","            self?.complete(challenge, with: nil)","         } catch {","            self?.complete(challenge, with: error)","         }","      }","   )","   presentingViewController.present(controller, animated: true)","}","","@MainActor","func cancel(_ challenge: TwoFactorAuthenticationChallenge) {","   presentingViewController.dismiss(animated: true) {","      challenge.cancel()","   }","}","","@MainActor","func complete(_ challenge: TwoFactorAuthenticationChallenge, with error: Error?) {","   presentingViewController.dismiss(animated: true) {","      challenge.complete(with: error)","   }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, set the handler to a web client configuration."}]},{"type":"codeListing","syntax":"swift","code":["let config: URLSessionWebClientConfiguration = .default","config.twoFactorAuthenticationHandler = My2FAHandler(presentingViewController: controller)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"That’s it! Now you don’t have to worry about 2FA challenges for particular requests. They will"},{"type":"text","text":" "},{"type":"text","text":"be handled automatically."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/web\/handle2fachallenge"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Web\/documentation\/Web\/Handle2FAChallenge","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Read how to handle and interact with 2FA challenges."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Handle 2FA Challenge","role":"article","modules":[{"name":"Web"}]},"hierarchy":{"paths":[["doc:\/\/Web\/documentation\/Web"]]},"seeAlsoSections":[{"title":"2FA","identifiers":["doc:\/\/Web\/documentation\/Web\/TwoFactorAuthenticationHandler","doc:\/\/Web\/documentation\/Web\/TwoFactorAuthenticationChallenge","doc:\/\/Web\/documentation\/Web\/TwoFactorAuthenticationChallengeError"],"generated":true}],"references":{"doc://Web/documentation/Web/TwoFactorAuthenticationChallenge":{"role":"symbol","title":"TwoFactorAuthenticationChallenge","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TwoFactorAuthenticationChallenge"}],"abstract":[{"type":"text","text":"An object that is used to manage 2FA challenge."}],"identifier":"doc:\/\/Web\/documentation\/Web\/TwoFactorAuthenticationChallenge","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TwoFactorAuthenticationChallenge"}],"url":"\/documentation\/web\/twofactorauthenticationchallenge"},"doc://Web/documentation/Web/TwoFactorAuthenticationHandler":{"role":"symbol","title":"TwoFactorAuthenticationHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TwoFactorAuthenticationHandler"}],"abstract":[{"type":"text","text":"A protocol you need to implement and set to "},{"type":"codeVoice","code":"URLSessionWebClientConfiguration"},{"type":"text","text":" to handle"},{"type":"text","text":" "},{"type":"text","text":"authentication challenges."}],"identifier":"doc:\/\/Web\/documentation\/Web\/TwoFactorAuthenticationHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TwoFactorAuthenticationHandler"}],"url":"\/documentation\/web\/twofactorauthenticationhandler"},"doc://Web/documentation/Web/TwoFactorAuthenticationChallengeError":{"role":"symbol","title":"TwoFactorAuthenticationChallengeError","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"TwoFactorAuthenticationChallengeError"}],"abstract":[{"type":"text","text":"An error that is thrown when challenge authentication is failed."}],"identifier":"doc:\/\/Web\/documentation\/Web\/TwoFactorAuthenticationChallengeError","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TwoFactorAuthenticationChallengeError"}],"url":"\/documentation\/web\/twofactorauthenticationchallengeerror"},"doc://Web/documentation/Web":{"role":"collection","title":"Web","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Web"}]},{"type":"text","text":" is a network library that provides you with a full-featured web client built on top of new"},{"type":"text","text":" "},{"type":"text","text":"concurrency model introduced in Swift 5.5."}],"identifier":"doc:\/\/Web\/documentation\/Web","kind":"symbol","type":"topic","url":"\/documentation\/web"}}}